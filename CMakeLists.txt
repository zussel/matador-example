PROJECT(matador-example)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

# project version
STRING(TOUPPER ${PROJECT_NAME} PROJECT_NAME_UPPER)

SET(APP_MAJOR_VERSION 0)
SET(APP_MINOR_VERSION 1)
SET(APP_PATCH_LEVEL 0)
SET(APP_VERSION "${APP_MAJOR_VERSION}.${APP_MINOR_VERSION}.${APP_PATCH_LEVEL}")

MESSAGE(STATUS "${PROJECT_NAME_UPPER} ${APP_VERSION}")

MESSAGE(STATUS "Compiler: ${CMAKE_CXX_COMPILER}")
MESSAGE(STATUS "Architecture: ${CMAKE_SYSTEM_PROCESSOR}")
MESSAGE(STATUS "Architecture System: ${CMAKE_SYSTEM_NAME}")

# add module path
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")

IF (NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

MESSAGE(STATUS "Build type: ${CMAKE_BUILD_TYPE}")

FIND_PACKAGE(SQLite3 REQUIRED)
IF (SQLITE3_FOUND)
  MESSAGE(STATUS "Found SQLite3 library")
ELSE ()
  MESSAGE(FATAL_ERROR "Couldn't find SQLite3 library")
ENDIF ()

FIND_PACKAGE(Matador REQUIRED)

IF(MATADOR_FOUND)
  MESSAGE(STATUS "Found matador library")
ELSE()
  MESSAGE(FATAL_ERROR "Couldn't find matador lib")
ENDIF()

FIND_PACKAGE(MatadorBackendSQLite REQUIRED)

IF(MATADOR_BACKEND_SQLITE_FOUND)
  MESSAGE(STATUS "Found matador sqlite backend library")
ELSE()
  MESSAGE(FATAL_ERROR "Couldn't find matador sqlite backend library")
ENDIF()

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)

ADD_SUBDIRECTORY(src)
